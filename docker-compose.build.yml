services:
  runner:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        RUNNER_VERSION: ${RUNNER_VERSION:-2.328.0}
    image: github-runner-universal:latest
    platform: ${RUNNER_PLATFORM:-linux/amd64}
    container_name: ${CONTAINER_NAME:-github-runner}
    environment:
      # Runner配置
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - RUNNER_SCOPE=${RUNNER_SCOPE:-repo}  # repo, org, 或 enterprise
      - GITHUB_OWNER=${GITHUB_OWNER}
      - GITHUB_REPOSITORY=${GITHUB_REPOSITORY:-}  # 对于org/enterprise Runner是可选的
      - RUNNER_NAME=${RUNNER_NAME:-universal-runner}
      - RUNNER_LABELS=${RUNNER_LABELS:-self-hosted,linux,x64,docker}
      - RUNNER_WORKDIR=${RUNNER_WORKDIR:-_work}
      - RUNNER_GROUP=${RUNNER_GROUP:-default}
      - EPHEMERAL=${EPHEMERAL:-false}  # true表示临时Runner
      - DISABLE_AUTO_UPDATE=${DISABLE_AUTO_UPDATE:-true}
    volumes:
      # Docker套接字，用于Docker-in-Docker
      - /var/run/docker.sock:/var/run/docker.sock
      # 持久化工作目录
      - ${WORK_DIR:-./work}:/home/runner/_work
      # 共享缓存目录（可选）
      - ${CARGO_CACHE:-./cache/cargo}:/home/runner/.cargo
      - ${NPM_CACHE:-./cache/npm}:/home/runner/.npm
      - ${MAVEN_CACHE:-./cache/maven}:/home/runner/.m2
      - ${GRADLE_CACHE:-./cache/gradle}:/home/runner/.gradle
      # 自定义工具目录（可选）
      - ${TOOLS_DIR:-./tools}:/opt/tools:ro
      # SSH密钥（可选）
      - ${SSH_DIR:-./ssh}:/home/runner/.ssh:ro
    restart: ${RESTART_POLICY:-unless-stopped}
    networks:
      - runner-network
    deploy:
      resources:
        limits:
          cpus: ${CPU_LIMIT:-4}
          memory: ${MEMORY_LIMIT:-8G}
        reservations:
          cpus: ${CPU_RESERVATION:-1}
          memory: ${MEMORY_RESERVATION:-2G}

networks:
  runner-network:
    driver: bridge
    name: ${NETWORK_NAME:-runner-network}